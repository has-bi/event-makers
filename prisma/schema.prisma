// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(uuid())
  email      String @unique
  password   String
  name       String
  googleId   String? @unique
  createdAt  DateTime @default(now())

  events     Event[] @relation("UserEvents")
  participants Participant[]
  sessions Session[]
}

model Event {
  id          String @id @default(uuid())
  title       String
  description String
  startDatetime DateTime
  endDatetime DateTime
  location    String
  image       String?
  status      String
  capacity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  creatorId   String

  creator     User @relation(fields: [creatorId], references: [id], name: "UserEvents")
  participants Participant[]
}

model Participant {
  id        String @id @default(uuid())
  status    String
  createdAt DateTime @default(now())
  eventId   String
  userId    String

  event     Event @relation(fields: [eventId], references: [id])
  user      User @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id @default(uuid())  // Added @default(uuid()) to match other models
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires   DateTime
  data      String?  
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expires])
}